{"version":3,"sources":["webpack:///./src/pages/likes/index.js"],"names":["LinksSection","styled","section","scrollBarMixin","LinksContainer","div","LinkCategory","LinkList","ul","underlineMixin","Index","render","data","this","props","siteTitle","site","siteMetadata","title","author","bookData","books","frontmatter","linksData","links","linkGroups","location","map","group","key","link","name","target","rel","href","url","book","isbn","React","Component","pageQuery"],"mappings":"85CASA,IAAMA,EAAeC,IAAOC,QAAV,IACdC,KAaEC,EAAiBH,IAAOI,IAAV,KAmBPC,EAAeL,IAAOC,QAAV,KAGZK,EAAWN,IAAOO,GAAV,IAOfC,KAIAC,E,gLACJC,OAAA,WAAU,IACAC,EAASC,KAAKC,MAAdF,KACFG,EAAYH,EAAKI,KAAKC,aAAaC,MACnCC,EAASP,EAAKI,KAAKC,aAAaE,OAChCC,EAAWR,EAAKS,MAAMC,YAAYD,MAClCE,EAAYX,EAAKY,MAAMF,YAAYG,WAEzC,OACE,kBAAC,IAAD,CAAQC,SAAUb,KAAKC,MAAMY,SAAUP,OAAQA,EAAQD,MAAOH,GAC5D,kBAAC,IAAD,CAAKG,MAAM,UACX,kBAAClB,EAAD,KACE,gCACE,4BAAK,UAEP,kBAACI,EAAD,KACGmB,EAAUI,KAAI,SAAAC,GAAK,OAClB,kBAACtB,EAAD,CAAcuB,IAAKD,EAAMV,OACvB,4BAAKU,EAAMV,OACX,kBAACX,EAAD,KACGqB,EAAMJ,MAAMG,KAAI,SAAAG,GAAI,OACnB,wBAAID,IAAKC,EAAKC,MACZ,uBACEC,OAAO,SACPC,IAAI,sBACJC,KAAMJ,EAAKK,KAEVL,EAAKC,eAOlB,kBAACzB,EAAD,CAAcuB,IAAK,QACjB,4BAAK,SACL,kBAACtB,EAAD,KACGa,EAASO,KAAI,SAAAS,GAAI,OAChB,wBAAIP,IAAKO,EAAKlB,OACZ,uBACEc,OAAO,SACPC,IAAI,sBACJC,KAAI,qDAAuDE,EAAKC,MAE/DD,EAAKlB,iB,GA5CRoB,IAAMC,WAyDX7B,YAER,IAAM8B,EAAS","file":"component---src-pages-likes-index-js-512c63d2d3f0531aed54.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../../layouts\"\nimport SEO from \"../../components/seo\"\nimport { scrollBarMixin, underlineMixin } from \"../../components/shared\"\n// import { LinkCategory, LinkList } from \"../../components/links\"\n\nconst LinksSection = styled.section`\n  ${scrollBarMixin}\n  padding-bottom: 3em;\n  padding-right: 1em;\n  header {\n    margin-bottom: 2em;\n  }\n  h2 {\n    font-weight: 400;\n    font-family: \"Montserrat\";\n    font-size: 1.5em;\n  }\n`\n\nconst LinksContainer = styled.div`\n  display: grid;\n  grid-column-gap: 10px;\n  grid-template-columns: repeat(1, 1fr);\n  padding: 0 1em;\n  @media only screen and (min-width: 475px) {\n    grid-column-gap: 15px;\n    grid-template-columns: repeat(2, 1fr);\n  }\n  @media only screen and (min-width: 768px) {\n    grid-column-gap: 20px;\n    grid-template-columns: repeat(3, 1fr);\n    padding: 0;\n  }\n  @media only screen and (min-width: 1080px) {\n    grid-template-columns: repeat(4, 1fr);\n  }\n`\n\nexport const LinkCategory = styled.section`\n  padding: 0.5em 0em;\n`\nexport const LinkList = styled.ul`\n  padding-left: 1em;\n  margin-top: 0.5em;\n  a {\n    color: black;\n    text-transform: lowercase;\n    text-decoration: none;\n    ${underlineMixin};\n  }\n`\n\nclass Index extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const author = data.site.siteMetadata.author\n    const bookData = data.books.frontmatter.books\n    const linksData = data.links.frontmatter.linkGroups\n\n    return (\n      <Layout location={this.props.location} author={author} title={siteTitle}>\n        <SEO title=\"likes\" />\n        <LinksSection>\n          <header>\n            <h2>{\"likes\"}</h2>\n          </header>\n          <LinksContainer>\n            {linksData.map(group => (\n              <LinkCategory key={group.title}>\n                <h3>{group.title}</h3>\n                <LinkList>\n                  {group.links.map(link => (\n                    <li key={link.name}>\n                      <a\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        href={link.url}\n                      >\n                        {link.name}\n                      </a>\n                    </li>\n                  ))}\n                </LinkList>\n              </LinkCategory>\n            ))}\n            <LinkCategory key={\"book\"}>\n              <h3>{\"books\"}</h3>\n              <LinkList>\n                {bookData.map(book => (\n                  <li key={book.title}>\n                    <a\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      href={`https://www.betterworldbooks.com/search/results?q=${book.isbn}`}\n                    >\n                      {book.title}\n                    </a>\n                  </li>\n                ))}\n              </LinkList>\n            </LinkCategory>\n          </LinksContainer>\n        </LinksSection>\n      </Layout>\n    )\n  }\n}\n\nexport default Index\n\nexport const pageQuery = graphql`\n  query LikesQuery {\n    site {\n      siteMetadata {\n        author\n        title\n      }\n    }\n    books: markdownRemark(frontmatter: { templateKey: { eq: \"books\" } }) {\n      frontmatter {\n        books {\n          title\n          author\n          isbn\n        }\n      }\n    }\n    links: markdownRemark(frontmatter: { templateKey: { eq: \"links\" } }) {\n      frontmatter {\n        linkGroups {\n          title\n          links {\n            name\n            url\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}