{"version":3,"sources":["webpack:///./src/components/blog/index.js","webpack:///./src/pages/blog/index.js"],"names":["PostContainer","styled","div","underlineMixin","Post","node","title","frontmatter","fields","slug","key","date","to","dangerouslySetInnerHTML","__html","description","excerpt","PostsSection","section","BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","author","posts","allMarkdownRemark","edges","location","length","map","React","Component","pageQuery"],"mappings":"qnBAMO,IAEDA,EAAgBC,IAAOC,IAAV,IAgBbC,KAYOC,EAAO,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACfC,EAAQD,EAAKE,YAAYD,OAASD,EAAKG,OAAOC,KACpD,OACE,kBAACT,EAAD,CAAeU,IAAKL,EAAKG,OAAOC,MAC9B,mCAASJ,EAAKE,YAAYI,KAA1B,MACC,MACD,kBAAC,OAAD,CAAMC,GAAIP,EAAKG,OAAOC,MACpB,4BAAKH,IAEP,uBACEO,wBAAyB,CACvBC,OAAQT,EAAKE,YAAYQ,aAAeV,EAAKW,a,2UCtCvD,IAAMC,EAAehB,IAAOiB,QAAV,KAaZC,E,gLACJC,OAAA,WAAU,IACAC,EAASC,KAAKC,MAAdF,KACFG,EAAYH,EAAKI,KAAKC,aAAapB,MACnCqB,EAASN,EAAKI,KAAKC,aAAaC,OAChCC,EAAQP,EAAKQ,kBAAkBC,MAErC,OACE,kBAAC,IAAD,CAAQC,SAAUT,KAAKC,MAAMQ,SAAUJ,OAAQA,EAAQrB,MAAOkB,GAC5D,kBAAC,IAAD,CAAKlB,MAAM,SACX,kBAACW,EAAD,KACE,gCACE,4BAAK,SAENW,EAAMI,OAAS,EACdJ,EAAMK,KAAI,gBAAG5B,EAAH,EAAGA,KAAH,OACR,kBAAC,EAAD,CAAMK,IAAKL,EAAKE,YAAYD,MAAOD,KAAMA,OAG3C,2BAAI,oB,GAnBQ6B,IAAMC,WA6BjBC,GAFEjB,YAEO","file":"component---src-pages-blog-index-js-64dfbf27246796b1ced5.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport { Link } from \"gatsby\"\n\nimport { underlineMixin } from \"../shared\"\n\nexport const Tags = ({ node }) => null\n\nconst PostContainer = styled.div`\n  margin: 1.5em 0;\n  vertical-align: middle;\n  span {\n    font-size: 14px;\n    text-transform: lowercase;\n  }\n\n  h3 {\n    font-size: 16px;\n    font-weight: 600;\n    display: inline;\n  }\n\n  a {\n    color: black;\n    ${underlineMixin}\n  }\n  p {\n    margin-top: 0.5em;\n  }\n\n  li {\n    margin-right: 1em;\n    display: inline;\n  }\n`\n\nexport const Post = ({ node }) => {\n  const title = node.frontmatter.title || node.fields.slug\n  return (\n    <PostContainer key={node.fields.slug}>\n      <span>[ {node.frontmatter.date} ]</span>\n      {\" - \"}\n      <Link to={node.fields.slug}>\n        <h3>{title}</h3>\n      </Link>\n      <p\n        dangerouslySetInnerHTML={{\n          __html: node.frontmatter.description || node.excerpt,\n        }}\n      />\n    </PostContainer>\n  )\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../../layouts\"\n\nimport SEO from \"../../components/seo\"\nimport { Post } from \"../../components/blog\"\n\nconst PostsSection = styled.section`\n  padding-bottom: 3em;\n  padding-right: 1em;\n  header {\n    margin-bottom: 2em;\n  }\n  h2 {\n    font-weight: 400;\n    font-family: \"Montserrat\";\n    font-size: 1.5em;\n  }\n`\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const author = data.site.siteMetadata.author\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n      <Layout location={this.props.location} author={author} title={siteTitle}>\n        <SEO title=\"blog\" />\n        <PostsSection>\n          <header>\n            <h2>{\"blog\"}</h2>\n          </header>\n          {posts.length > 0 ? (\n            posts.map(({ node }) => (\n              <Post key={node.frontmatter.title} node={node} />\n            ))\n          ) : (\n            <p>{\"no posts yet.\"}</p>\n          )}\n        </PostsSection>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        author\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/(blog)/\" } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD-MM-YYYY\")\n            title\n            description\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}